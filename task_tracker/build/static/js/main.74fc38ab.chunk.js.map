{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","remember","setTask","Math","floor","random","newTask","length","console","log","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74fc38ab.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <button onClick = {onClick} style={{ backgroundColor: color}} className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>       \r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick = {onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n}\r\n// css in js\r\n//const headingStyle = {\r\n//    color: 'red', \r\n//    backgroundColor: 'black'\r\n//}\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = {()=> onToggle(task.id)}>\r\n            <h3>My Task is {task.text} <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task = {task} onDelete={onDelete} onToggle={onToggle}/>\r\n            )) \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e)=> {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Add Task!')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\"\r\n                value={text}\r\n                onChange = {(e)=> setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder=\"Add Day and Time\"\r\n                value={day}\r\n                onChange = {(e)=> setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\"\r\n                checked={reminder}\r\n                value={reminder}\r\n                onChange = {(e)=> setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type=\"submit\" value = \"Save Task\" className=\"btn btn-block\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTask] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        remember: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    }\n])\n  //Submit Task \n  const addTask = (task)=> {\n      const id = Math.floor(Math.random() * 10000) + 1\n      const newTask = { id, ...task }\n      setTask([...tasks, newTask])\n\n  }\n\n  //Delete Task\n  const deleteTask = (id)=> {\n    console.log(id)\n    setTask(tasks.filter((task)=> task.id!==id))\n  }\n\n  const toggleReminder = (id) => {\n      setTask(tasks.map((task) => task.id === id ? { ...task, reminder:!task.reminder } : task))\n  }\n  return (\n    <div className=\"container\">\n      <Header onAdd = {() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks = {tasks} onDelete = {deleteTask} onToggle={toggleReminder} /> : 'No recent tasks!'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}